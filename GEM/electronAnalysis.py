import numpy as np
import matplotlib.pyplot as plt
import pandas as pd 
from scipy.optimize import curve_fit

plt.rcParams.update({
  "text.usetex": True,
  "font.family": "sans-serif"
})

def readElectronData(ar, energy, V, showHists = False, showDistribution = False):
	filePath = str(V)+'/'+'dataElectronsAr{}E{}V{}.csv'.format(ar, energy, V)
	
	dataFrame = pd.read_csv(filePath)

	xAll = dataFrame['x']
	yAll = dataFrame['y']
	zAll = dataFrame['z']
	eAll = dataFrame['e']

	xAll = xAll[zAll == -0.203000]
	yAll = yAll[zAll == -0.203000] 
	eAll = eAll[zAll == -0.203000] 

	xAllMean = xAll.mean()
	xAllStd = xAll.std()

	yAllMean = yAll.mean()
	yAllStd = yAll.std()

	eAllMean = eAll.mean()
	eAllStd = eAll.std()

	muonMeanX = dataFrame.groupby('step')['x'].mean()
	muonStdX = dataFrame.groupby('step')['x'].std()

	muonMeanY = dataFrame.groupby('step')['y'].mean()
	muonStdY = dataFrame.groupby('step')['y'].std()

	xAvgMean = muonMeanX.mean()
	xAvgStd = muonStdX.std()

	yAvgMean =  muonMeanY.mean()
	yAvgStd = muonStdY.std()


	if(showHists):
		
		plt.title('Distribución coordenada $x$ de todos los electrones')
		plt.hist(xAll, bins = 40, color = 'blue', label = r'$\mu = $' + '{:.4f}'.format(xAll.mean()) + r', $\sigma = $' + '{:.4f}'.format(xAll.std()))
		plt.xlabel('$x$(cm)')
		plt.ylabel('Conteos')
		plt.legend()
		plt.savefig('electronGraphs/HistxTot.eps', format = 'eps')
		plt.show()

		plt.title('Distribución coordenada $y$ de todos los electrones')
		plt.hist(yAll, bins = 40, color = 'red', label = r'$\mu = $' + '{:.4f}'.format(yAll.mean()) + r', $\sigma = $' + '{:.4f}'.format(yAll.std()))
		plt.xlabel('$y$(cm)')
		plt.ylabel('Conteos')
		plt.legend()
		plt.savefig('electronGraphs/HistyTot.eps', format = 'eps')
		plt.show()

		plt.title('Distribución de la energía de todos los electrones')
		plt.hist(eAll, bins = 40, color = 'magenta', label = r'$\mu = $' + '{:.4f}'.format(eAll.mean()) + r', $\sigma = $' + '{:.4f}'.format(eAll.std()))
		plt.xlabel(r'$E_{e^{-}}$(eV)')
		plt.ylabel('Conteos')
		plt.legend()
		plt.savefig('electronGraphs/HistEnergia.eps', format = 'eps')
		plt.show()
		
		plt.title('Distribución coordenada $z$ de todos los electrones')
		plt.hist(zAll, bins = 40, color = 'green')
		plt.xlabel('$z$(cm)')
		plt.ylabel('Conteos')
		plt.tight_layout()
		plt.savefig('electronGraphs/HistZ.eps', format = 'eps')
		plt.show()

		plt.title('Histograma $(x,y)$ con los todos los electrones')
		plt.hist2d(xAll, yAll, bins = 40)
		plt.xlabel('$x$(cm)')
		plt.ylabel('$y$(cm)')
		plt.colorbar()
		plt.savefig('electronGraphs/HistxyTot.eps', format = 'eps')
		plt.show()

	if(showDistribution):

		plt.title('Distribución coordenada $x$ promediada por evento')
		plt.hist(muonMeanX, bins = 40, color = 'blue', label = r'$\mu = $' + '{:.4f}'.format(muonMeanX.mean()) + r', $\sigma = $' + '{:.4f}'.format(muonMeanX.std()))
		plt.xlabel('$x$(cm)')
		plt.ylabel('Conteos')
		plt.legend()
		plt.savefig('electronGraphs/HistxProm.eps', format = 'eps')
		plt.show()

		plt.title('Distribución coordenada $y$ promediada por evento')
		plt.hist(muonMeanY, bins = 40, color = 'red', label = r'$\mu = $' + '{:.4f}'.format(muonMeanY.mean()) + r', $\sigma = $' + '{:.4f}'.format(muonMeanY.std()))
		plt.xlabel('$y$(cm)')
		plt.ylabel('Conteos')
		plt.legend()
		plt.savefig('electronGraphs/HistyProm.eps', format = 'eps')
		plt.show()
		
		plt.title('Distribución $\sigma_x$ promediada por evento')
		plt.hist(muonStdX, bins = 40, color = 'brown', label = r'$\mu = $' + '{:.4f}'.format(muonStdX.mean()) + r', $\sigma = $' + '{:.4f}'.format(muonStdX.std()))
		plt.xlabel(r'$\sigma_x$(cm)')
		plt.ylabel('Conteos')
		plt.legend()
		plt.savefig('electronGraphs/HistDesxProm.eps', format = 'eps')
		plt.show()

		plt.title('Distribución $\sigma_y$ promediada por evento')
		plt.hist(muonStdY, bins = 40, color = 'black', label = r'$\mu = $' + '{:.4f}'.format(muonStdY.mean()) + r', $\sigma = $' + '{:.4f}'.format(muonStdY.std()))
		plt.xlabel(r'$\sigma_y$(cm)')
		plt.ylabel('Conteos')
		plt.legend()
		plt.savefig('electronGraphs/HistDesyProm.eps', format = 'eps')
		plt.show()

		plt.title('Histograma $(x,y)$ promediado por evento')
		plt.hist2d(muonMeanX, muonMeanY, bins = 40)
		plt.xlabel('$x$(cm)')
		plt.ylabel('$y$(cm)')
		plt.colorbar()
		plt.savefig('electronGraphs/HistxyProm.eps', format = 'eps')
		plt.show()

	return np.array([xAllMean, xAllStd, yAllMean, yAllStd, eAllMean, eAllStd, xAvgMean, xAvgStd, yAvgMean, yAvgStd])


def curveFit(x, y, mod = 'linear', guess = None):
	if(mod == 'linear'):
		coef, cov = curve_fit(lambda x, m, b: m*x + b, x, y, p0 = guess)

		def f(x):
			return x*coef[0] + coef[1]

		print(coef[0], 	np.sqrt(cov)[0, 0])
		print(coef[1], np.sqrt(cov)[1, 1])

		return np.vectorize(f)

	elif(mod == 'exp'):
		coef, cov = curve_fit(lambda x, a, b, c: a*np.exp(b*x) + c, x, y, p0 = guess)

		def f(x):
			return coef[0]*np.exp(coef[1]*x) + coef[2]

		return np.vectorize(f)

def fixedVfixedE(energy, V):
	argons = np.array([60, 65, 70, 75, 80])
	return np.vectorize(readElectronData, excluded=['energy', 'V'], signature = '()->(n)')(energy = energy, V = V, ar = argons)

def fixedVfixedAr(ar, V):
	energies= np.array([7, 8, 9, 10, 11])
	return np.vectorize(readElectronData, excluded=['ar', 'V'], signature = '()->(n)')(ar = ar, V = V, energy = energies)
	
def fixedV(V = 400):
	energies= np.array([7, 8, 9, 10, 11])
	argons = np.array([60, 65, 70, 75, 80])

	fixedE = np.vectorize(fixedVfixedE, excluded = ['V'], signature = '()->(n,m)')(V = V, energy = energies)
	
	xAllMean, xAllStd, yAllMean, yAllStd, eAllMean, eAllStd, xAvgMean, xAvgStd, yAvgMean, yAvgStd = fixedE[:, :, 0], fixedE[:, :, 1], fixedE[:, :, 2], fixedE[:, :, 3], fixedE[:, :, 4], fixedE[:, :, 5], fixedE[:, :, 6], fixedE[:, :, 7], fixedE[:, :, 8], fixedE[:, :, 9]

	# Intentar gráfica de fluctuaciones
	plt.title(r'$\langle x \rangle$ contra $\%$ Ar con todos los eventos para $E_{\mu^{-}}$ fijas')
	plt.plot(argons, xAllMean[0, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[0]) + r'}$ eV', color = 'purple')
	plt.scatter(argons, xAllMean[0, :], color = 'purple')
	plt.plot(argons, xAllMean[1, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[1]) + r'}$ eV', color = 'red')
	plt.scatter(argons, xAllMean[1, :], color = 'red')
	plt.plot(argons, xAllMean[2, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[2]) + r'}$ eV', color = 'green')
	plt.scatter(argons, xAllMean[2, :], color = 'green')
	plt.plot(argons, xAllMean[3, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[3]) + r'}$ eV', color = 'magenta')
	plt.scatter(argons, xAllMean[3, :], color = 'magenta')
	plt.plot(argons, xAllMean[4, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[4]) + r'}$ eV', color = 'blue')
	plt.scatter(argons, xAllMean[4, :], color = 'blue')
	plt.ylabel('Coordenada $x$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/xTot-Ar-E.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle x \rangle}$ contra $\%$ Ar con todos los eventos para $E_{\mu^{-}}$ fijas')
	plt.plot(argons, xAllStd[0, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[0]) + r'}$ eV', color = 'purple')
	plt.scatter(argons, xAllStd[0, :], color = 'purple')
	plt.plot(argons, xAllStd[1, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[1]) + r'}$ eV', color = 'red')
	plt.scatter(argons, xAllStd[1, :], color = 'red')
	plt.plot(argons, xAllStd[2, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[2]) + r'}$ eV', color = 'green')
	plt.scatter(argons, xAllStd[2, :], color = 'green')
	plt.plot(argons, xAllStd[3, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[3]) + r'}$ eV', color = 'magenta')
	plt.scatter(argons, xAllStd[3, :], color = 'magenta')
	plt.plot(argons, xAllStd[4, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[4]) + r'}$ eV', color = 'blue')
	plt.scatter(argons, xAllStd[4, :], color = 'blue')
	plt.ylabel(r'$\sigma_x$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesxTot-Ar-E.eps', format = 'eps')
	plt.show()

	plt.title(r'$\langle y \rangle$ contra $\%$ Ar con todos los eventos para $E_{\mu^{-}}$ fijas')
	plt.plot(argons, yAllMean[0, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[0]) + r'}$ eV', color = 'purple')
	plt.scatter(argons, yAllMean[0, :], color = 'purple')
	plt.plot(argons, yAllMean[1, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[1]) + r'}$ eV', color = 'red')
	plt.scatter(argons, yAllMean[1, :], color = 'red')
	plt.plot(argons, yAllMean[2, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[2]) + r'}$ eV', color = 'green')
	plt.scatter(argons, yAllMean[2, :], color = 'green')
	plt.plot(argons, yAllMean[3, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[3]) + r'}$ eV', color = 'magenta')
	plt.scatter(argons, yAllMean[3, :], color = 'magenta')
	plt.plot(argons, yAllMean[4, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[4]) + r'}$ eV', color = 'blue')
	plt.scatter(argons, yAllMean[4, :], color = 'blue')
	plt.ylabel('Coordenada $y$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/yTot-Ar-E.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle y \rangle}$ contra $\%$ Ar con todos los eventos para $E_{\mu^{-}}$ fijas')
	plt.plot(argons, yAllStd[0, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[0]) + r'}$ eV', color = 'purple')
	plt.scatter(argons, yAllStd[0, :], color = 'purple')
	plt.plot(argons, yAllStd[1, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[1]) + r'}$ eV', color = 'red')
	plt.scatter(argons, yAllStd[1, :], color = 'red')
	plt.plot(argons, yAllStd[2, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[2]) + r'}$ eV', color = 'green')
	plt.scatter(argons, yAllStd[2, :], color = 'green')
	plt.plot(argons, yAllStd[3, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[3]) + r'}$ eV', color = 'magenta')
	plt.scatter(argons, yAllStd[3, :], color = 'magenta')
	plt.plot(argons, yAllStd[4, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[4]) + r'}$ eV', color = 'blue')
	plt.scatter(argons, yAllStd[4, :], color = 'blue')
	plt.ylabel(r'$\sigma_y$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesyTot-Ar-E.eps', format = 'eps')
	plt.show()


	argonsCont = np.linspace(np.min(argons), np.max(argons), 1000)
	fitArgonsCont = curveFit(argons, eAllMean[0, :])(argonsCont)

	plt.title(r'Energía promedio contra $\%$ Ar para $E_{\mu^{-}}$ fijas')
	plt.scatter(argons, eAllMean[0, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[0]) + r'}$ eV', color = 'purple')
	plt.scatter(argons, eAllMean[1, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[1]) + r'}$ eV', color = 'red')
	plt.scatter(argons, eAllMean[2, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[2]) + r'}$ eV', color = 'green')
	plt.scatter(argons, eAllMean[3, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[3]) + r'}$ eV', color = 'magenta')
	plt.scatter(argons, eAllMean[4, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[4]) + r'}$ eV', color = 'blue')
	plt.plot(argonsCont, fitArgonsCont, color = 'black')
	plt.ylabel(r'$E_{e^{-}}$(eV)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/Energia-Ar-E.eps', format = 'eps')
	plt.show()

	plt.title(r'Desviación energía promedio contra $\%$ Ar para $E_{\mu^{-}}$ fijas')
	plt.plot(argons, eAllStd[0, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[0]) + r'}$ eV', color = 'purple')
	plt.scatter(argons, eAllStd[0, :], color = 'purple')
	plt.plot(argons, eAllStd[1, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[1]) + r'}$ eV', color = 'red')
	plt.scatter(argons, eAllStd[1, :], color = 'red')
	plt.plot(argons, eAllStd[2, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[2]) + r'}$ eV', color = 'green')
	plt.scatter(argons, eAllStd[2, :], color = 'green')
	plt.plot(argons, eAllStd[3, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[3]) + r'}$ eV', color = 'magenta')
	plt.scatter(argons, eAllStd[3, :], color = 'magenta')
	plt.plot(argons, eAllStd[4, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[4]) + r'}$ eV', color = 'blue')
	plt.scatter(argons, eAllStd[4, :], color = 'blue')
	plt.ylabel(r'$\sigma_E$ promedio(eV)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesEnergia-Ar-E.eps', format = 'eps')
	plt.show()

	plt.title(r'$\langle x \rangle$ contra $\%$ Ar promediada por avalacha para $E_{\mu^{-}}$ fijas')
	plt.plot(argons, xAvgMean[0, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[0]) + r'}$ eV', color = 'purple')
	plt.scatter(argons, xAvgMean[0, :], color = 'purple')
	plt.plot(argons, xAvgMean[1, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[1]) + r'}$ eV', color = 'red')
	plt.scatter(argons, xAvgMean[1, :], color = 'red')
	plt.plot(argons, xAvgMean[2, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[2]) + r'}$ eV', color = 'green')
	plt.scatter(argons, xAvgMean[2, :], color = 'green')
	plt.plot(argons, xAvgMean[3, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[3]) + r'}$ eV', color = 'magenta')
	plt.scatter(argons, xAvgMean[3, :], color = 'magenta')
	plt.plot(argons, xAvgMean[4, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[4]) + r'}$ eV', color = 'blue')
	plt.scatter(argons, xAvgMean[4, :], color = 'blue')
	plt.ylabel('Coordenada $x$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/xProm-Ar-E.eps', format = 'eps')
	plt.show()

	
	plt.title(r'$\sigma_{\langle x \rangle}$ contra $\%$ Ar promediada por avalacha para $E_{\mu^{-}}$ fijas')
	plt.plot(argons, xAvgStd[0, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[0]) + r'}$ eV', color = 'purple')
	plt.scatter(argons, xAvgStd[0, :], color = 'purple')
	plt.plot(argons, xAvgStd[1, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[1]) + r'}$ eV', color = 'red')
	plt.scatter(argons, xAvgStd[1, :], color = 'red')
	plt.plot(argons, xAvgStd[2, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[2]) + r'}$ eV', color = 'green')
	plt.scatter(argons, xAvgStd[2, :], color = 'green')
	plt.plot(argons, xAvgStd[3, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[3]) + r'}$ eV', color = 'magenta')
	plt.scatter(argons, xAvgStd[3, :], color = 'magenta')
	plt.plot(argons, xAvgStd[4, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[4]) + r'}$ eV', color = 'blue')
	plt.scatter(argons, xAvgStd[4, :], color = 'blue')
	plt.ylabel(r'$\sigma_x$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesxProm-Ar-E.eps', format = 'eps')
	plt.show()

	plt.title(r'$\langle y \rangle$ contra $\%$ Ar promediada por avalacha para $E_{\mu^{-}}$ fijas')
	plt.plot(argons, yAvgMean[0, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[0]) + r'}$ eV', color = 'purple')
	plt.scatter(argons, yAvgMean[0, :], color = 'purple')
	plt.plot(argons, yAvgMean[1, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[1]) + r'}$ eV', color = 'red')
	plt.scatter(argons, yAvgMean[1, :], color = 'red')
	plt.plot(argons, yAvgMean[2, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[2]) + r'}$ eV', color = 'green')
	plt.scatter(argons, yAvgMean[2, :], color = 'green')
	plt.plot(argons, yAvgMean[3, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[3]) + r'}$ eV', color = 'magenta')
	plt.scatter(argons, yAvgMean[3, :], color = 'magenta')
	plt.plot(argons, yAvgMean[4, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[4]) + r'}$ eV', color = 'blue')
	plt.scatter(argons, yAvgMean[4, :], color = 'blue')
	plt.ylabel('Coordenada $y$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/yProm-Ar-E.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle y \rangle}$ contra $\%$ Ar promediada por avalacha para $E_{\mu^{-}}$ fijas')
	plt.plot(argons, yAvgStd[0, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[0]) + r'}$ eV', color = 'purple')
	plt.scatter(argons, yAvgStd[0, :], color = 'purple')
	plt.plot(argons, yAvgStd[1, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[1]) + r'}$ eV', color = 'red')
	plt.scatter(argons, yAvgStd[1, :], color = 'red')
	plt.plot(argons, yAvgStd[2, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[2]) + r'}$ eV', color = 'green')
	plt.scatter(argons, yAvgStd[2, :], color = 'green')
	plt.plot(argons, yAvgStd[3, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[3]) + r'}$ eV', color = 'magenta')
	plt.scatter(argons, yAvgStd[3, :], color = 'magenta')
	plt.plot(argons, yAvgStd[4, :], label = r'$E_{\mu^{-}}$ = 1 $\times 10 ^{' + str(energies[4]) + r'}$ eV', color = 'blue')
	plt.scatter(argons, yAvgStd[3, :], color = 'blue')
	plt.ylabel(r'$\sigma_y$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesyProm-Ar-E.eps', format = 'eps')
	plt.show()


	# Dependencia con la energía
	
	# Intentar la gráfica de las fluctuaciones 

	plt.title(r'$\langle x \rangle$ contra $E_{\mu^{-}}$ con todos los eventos para $\%$Ar/CO2 fijos')
	plt.plot(10**energies, xAllMean[:, 0], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(10**energies, xAllMean[:, 0], color = 'purple')
	plt.plot(10**energies, xAllMean[:, 1], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(10**energies, xAllMean[:, 1], color = 'red')
	plt.plot(10**energies, xAllMean[:, 2], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(10**energies, xAllMean[:, 2], color = 'green')
	plt.plot(10**energies, xAllMean[:, 3], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(10**energies, xAllMean[:, 3], color = 'magenta')
	plt.plot(10**energies, xAllMean[:, 4], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(10**energies, xAllMean[:, 4], color = 'blue')
	plt.ylabel('Coordenada $x$ promedio(cm)')
	plt.xlabel(r'$E_{\mu^{-}}$(eV)')
	plt.legend()
	plt.xscale('log')
	plt.tight_layout()
	plt.savefig('electronGraphs/xTot-E-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle x \rangle}$ contra $E_{\mu^{-}}$ con todos los eventos para $\%$Ar/CO2 fijos')
	plt.plot(10**energies, xAllStd[:, 0], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(10**energies, xAllStd[:, 0], color = 'purple')
	plt.plot(10**energies, xAllStd[:, 1], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(10**energies, xAllStd[:, 1], color = 'red')
	plt.plot(10**energies, xAllStd[:, 2], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(10**energies, xAllStd[:, 2], color = 'green')
	plt.plot(10**energies, xAllStd[:, 3], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(10**energies, xAllStd[:, 3], color = 'magenta')
	plt.plot(10**energies, xAllStd[:, 4], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(10**energies, xAllStd[:, 4], color = 'blue')
	plt.ylabel(r'$\sigma_x$ promedio(cm)')
	plt.xlabel(r'$E_{\mu^{-}}$(eV)')
	plt.xscale('log')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesxTot-E-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\langle y \rangle$ contra $E_{\mu^{-}}$ con todos los eventos para $\%$Ar/CO2 fijos')
	plt.plot(10**energies, yAllMean[:, 0], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(10**energies, yAllMean[:, 0], color = 'purple')
	plt.plot(10**energies, yAllMean[:, 1], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(10**energies, yAllMean[:, 1], color = 'red')
	plt.plot(10**energies, yAllMean[:, 2], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(10**energies, yAllMean[:, 2], color = 'green')
	plt.plot(10**energies, yAllMean[:, 3], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(10**energies, yAllMean[:, 3], color = 'magenta')
	plt.plot(10**energies, yAllMean[:, 4], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(10**energies, yAllMean[:, 4], color = 'blue')
	plt.ylabel('Coordenada $y$ promedio(cm)')
	plt.xlabel(r'$E_{\mu^{-}}$(eV)')
	plt.xscale('log')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/yTot-E-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle y \rangle}$ contra $E_{\mu^{-}}$ con todos los eventos para $\%$Ar/CO2 fijos')
	plt.plot(10**energies, yAllStd[:, 0], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(10**energies, yAllStd[:, 0], color = 'purple')
	plt.plot(10**energies, yAllStd[:, 1], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(10**energies, yAllStd[:, 1], color = 'red')
	plt.plot(10**energies, yAllStd[:, 2], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(10**energies, yAllStd[:, 2], color = 'green')
	plt.plot(10**energies, yAllStd[:, 3], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(10**energies, yAllStd[:, 3], color = 'magenta')
	plt.plot(10**energies, yAllStd[:, 4], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(10**energies, yAllStd[:, 4], color = 'blue')
	plt.ylabel(r'$\sigma_y$ promedio(cm)')
	plt.xlabel(r'$E_{\mu^{-}}$(eV)')
	plt.xscale('log')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesyTot-E-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'Energía promedio contra $E_{\mu^{-}}$ para $\%$Ar/CO2 fijos')
	plt.plot(10**energies, eAllMean[:, 0], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(10**energies, eAllMean[:, 0], color = 'purple')
	plt.plot(10**energies, eAllMean[:, 1], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(10**energies, eAllMean[:, 1], color = 'red')
	plt.plot(10**energies, eAllMean[:, 2], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(10**energies, eAllMean[:, 2], color = 'green')
	plt.plot(10**energies, eAllMean[:, 3], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(10**energies, eAllMean[:, 3], color = 'magenta')
	plt.plot(10**energies, eAllMean[:, 4], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(10**energies, eAllMean[:, 4], color = 'blue')
	plt.ylabel(r'$E_{e^{-}}$(eV)')
	plt.xlabel(r'$E_{\mu^{-}}$(eV)')
	plt.xscale('log')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/Energia-E-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'Desviación energía promedio contra $E_{\mu^{-}}$ para $\%$Ar/CO2 fijos')
	plt.plot(10**energies, eAllStd[:, 0], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(10**energies, eAllStd[:, 0],  color = 'purple')
	plt.plot(10**energies, eAllStd[:, 1], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(10**energies, eAllStd[:, 1],  color = 'red')
	plt.plot(10**energies, eAllStd[:, 2], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(10**energies, eAllStd[:, 2],  color = 'green')
	plt.plot(10**energies, eAllStd[:, 3], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(10**energies, eAllStd[:, 3],  color = 'magenta')
	plt.plot(10**energies, eAllStd[:, 4], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(10**energies, eAllStd[:, 4],  color = 'blue')
	plt.ylabel(r'$\sigma_E$ promedio(eV)')
	plt.xlabel(r'$E_{\mu^{-}}$(eV)')
	plt.xscale('log')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesEnergia-E-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\langle x \rangle$ contra $E_{\mu^{-}}$ promediada por avalacha para $\%$Ar/CO2 fijos')
	plt.plot(10**energies, xAvgMean[:, 0], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(10**energies, xAvgMean[:, 0], color = 'purple')
	plt.plot(10**energies, xAvgMean[:, 1], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(10**energies, xAvgMean[:, 1], color = 'red')
	plt.plot(10**energies, xAvgMean[:, 2], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(10**energies, xAvgMean[:, 2], color = 'green')
	plt.plot(10**energies, xAvgMean[:, 3], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(10**energies, xAvgMean[:, 3], color = 'magenta')
	plt.plot(10**energies, xAvgMean[:, 4], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(10**energies, xAvgMean[:, 4], color = 'blue')
	plt.ylabel('Coordenada $x$ promedio(cm)')
	plt.xlabel(r'$E_{\mu^{-}}$(eV)')
	plt.xscale('log')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/xProm-E-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle x \rangle}$ contra $E_{\mu^{-}}$ promediada por avalacha para $\%$Ar/CO2 fijos')
	plt.plot(10**energies, xAvgStd[:, 0], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(10**energies, xAvgStd[:, 0], color = 'purple')
	plt.plot(10**energies, xAvgStd[:, 1], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(10**energies, xAvgStd[:, 1], color = 'red')
	plt.plot(10**energies, xAvgStd[:, 2], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(10**energies, xAvgStd[:, 2], color = 'green')
	plt.plot(10**energies, xAvgStd[:, 3], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(10**energies, xAvgStd[:, 3], color = 'magenta')
	plt.plot(10**energies, xAvgStd[:, 4], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(10**energies, xAvgStd[:, 4], color = 'blue')
	plt.ylabel(r'$\sigma_x$ promedio(cm)')
	plt.xlabel(r'$E_{\mu^{-}}$(eV)')
	plt.xscale('log')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesxProm-E-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\langle y \rangle$ contra $E_{\mu^{-}}$ promediada por avalacha para $\%$Ar/CO2 fijos')
	plt.plot(10**energies, yAvgMean[:, 0], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(10**energies, yAvgMean[:, 0], color = 'purple')
	plt.plot(10**energies, yAvgMean[:, 1], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(10**energies, yAvgMean[:, 1], color = 'red')
	plt.plot(10**energies, yAvgMean[:, 2], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(10**energies, yAvgMean[:, 2], color = 'green')
	plt.plot(10**energies, yAvgMean[:, 3], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(10**energies, yAvgMean[:, 3], color = 'magenta')
	plt.plot(10**energies, yAvgMean[:, 4], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(10**energies, yAvgMean[:, 4], color = 'blue')
	plt.ylabel('Coordenada $y$ promedio(cm)')
	plt.xlabel(r'$E_{\mu^{-}}$(eV)')
	plt.xscale('log')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/yProm-E-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle y \rangle}$ contra $E_{\mu^{-}}$ promediada por avalacha para $\%$Ar/CO2 fijos')
	plt.plot(10**energies, yAvgStd[:, 0], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(10**energies, yAvgStd[:, 0], color = 'purple')
	plt.plot(10**energies, yAvgStd[:, 1], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(10**energies, yAvgStd[:, 1], color = 'red')
	plt.plot(10**energies, yAvgStd[:, 2], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(10**energies, yAvgStd[:, 2], color = 'green')
	plt.plot(10**energies, yAvgStd[:, 3], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(10**energies, yAvgStd[:, 3], color = 'magenta')
	plt.plot(10**energies, yAvgStd[:, 4], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(10**energies, yAvgStd[:, 4], color = 'blue')
	plt.ylabel(r'$\sigma_y$ promedio(cm)')
	plt.xlabel(r'$E_{\mu^{-}}$(eV)')
	plt.xscale('log')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesyProm-E-Ar.eps', format = 'eps')
	plt.show()

	#fixedAr = np.vectorize(fixedVfixedAr, excluded = ['V'], signature = '()->(n,m)')(V = V, ar = argons)
	
	#print(fixedAr.shape)


	"""
		Returns
			-	x coordinate distribution
			-	y coordinate distribution
	"""

fixedV()

readElectronData(60, 9, 400, showHists = True, showDistribution = True)



"""










"""


def fixedEfixedV(V, energy):
	argons = np.array([60, 65, 70, 75, 80])
	return np.vectorize(readElectronData, excluded=['energy', 'V'], signature = '()->(n)')(energy = energy, V = V, ar = argons)

def fixedEfixedAr(ar, energy):
	voltages = np.array([400, 410, 420, 430, 440, 450, 460, 470, 480, 490, 500])
	return np.vectorize(readElectronData, excluded=['energy', 'ar'], signature = '()->(n)')(ar = ar, V = voltages, energy = energy)
	
def fixedE(energy = 9):
	voltages = np.array([400, 410, 420, 430, 440, 450, 460, 470, 480, 490, 500])
	argons = np.array([60, 65, 70, 75, 80])

	fixedAr = np.vectorize(fixedEfixedAr, excluded = ['energy'], signature = '()->(n,m)')(ar = argons, energy = energy)
	
	#xAllMean, xAllStd, yAllMean, yAllStd, ne, nIons, eAllMean, eAllStd, xAvgMean, xAllStd = fixedAr[:,:,0 ], fixedAr[:,:,1], fixedAr[:,:,2], fixedAr[:,:,3], fixedAr[:,:,4], fixedAr[:,:,5], fixedAr[:,:,6], fixedAr[:,:,7], fixedAr[:,:,8], fixedAr[:,:,9]          
	
	xAllMean, xAllStd, yAllMean, yAllStd, eAllMean, eAllStd, xAvgMean, xAvgStd, yAvgMean, yAvgStd = fixedAr[:,:,0 ], fixedAr[:,:,1], fixedAr[:,:,2], fixedAr[:,:,3], fixedAr[:,:,4], fixedAr[:,:,5], fixedAr[:,:,6], fixedAr[:,:,7], fixedAr[:,:,8], fixedAr[:,:,9]          

	plt.title(r'$\langle x \rangle$ contra voltaje con todos los eventos para $\%$Ar/CO2 fijos')
	plt.scatter(voltages, xAllMean[0, :], color = 'purple')
	plt.plot(voltages, xAllMean[0, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.plot(voltages, xAllMean[1, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(voltages, xAllMean[1, :], color = 'red')
	plt.plot(voltages, xAllMean[2, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(voltages, xAllMean[2, :], color = 'green')
	plt.plot(voltages, xAllMean[3, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(voltages, xAllMean[3, :], color = 'magenta')
	plt.plot(voltages, xAllMean[4, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(voltages, xAllMean[4, :], color = 'blue')
	plt.ylabel('Coordenada $x$ promedio(cm)')
	plt.xlabel(r'$V_{\mathrm{GEM}}$(V)')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/xTot-V-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle x \rangle}$ contra voltaje con todos los eventos para $\%$Ar/CO2 fijos')
	plt.plot(voltages, xAllStd[0, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(voltages, xAllStd[0, :], color = 'purple')
	plt.plot(voltages, xAllStd[1, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(voltages, xAllStd[1, :], color = 'red')
	plt.plot(voltages, xAllStd[2, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(voltages, xAllStd[2, :], color = 'green')
	plt.plot(voltages, xAllStd[3, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(voltages, xAllStd[3, :], color = 'magenta')
	plt.plot(voltages, xAllStd[4, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(voltages, xAllStd[4, :], color = 'blue')
	plt.ylabel(r'$\sigma_x$ promedio(cm)')
	plt.xlabel(r'$V_{\mathrm{GEM}}$(V)')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesxTot-V-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\langle y \rangle$ contra voltaje con todos los eventos para $\%$Ar/CO2 fijos')
	plt.plot(voltages, yAllMean[0, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(voltages, yAllMean[0, :], color = 'purple')
	plt.plot(voltages, yAllMean[1, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(voltages, yAllMean[1, :], color = 'red')
	plt.plot(voltages, yAllMean[2, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(voltages, yAllMean[2, :], color = 'green')
	plt.plot(voltages, yAllMean[3, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(voltages, yAllMean[3, :], color = 'magenta')
	plt.plot(voltages, yAllMean[4, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(voltages, yAllMean[4, :], color = 'blue')
	plt.ylabel('Coordenada $y$ promedio(cm)')
	plt.xlabel(r'$V_{\mathrm{GEM}}$(V)')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/yTot-V-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle y \rangle}$ contra voltaje con todos los eventos para $\%$Ar/CO2 fijos')
	plt.plot(voltages, yAllStd[0, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(voltages, yAllStd[0, :], color = 'purple')
	plt.plot(voltages, yAllStd[1, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(voltages, yAllStd[1, :], color = 'red')
	plt.plot(voltages, yAllStd[2, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(voltages, yAllStd[2, :], color = 'green')
	plt.plot(voltages, yAllStd[3, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(voltages, yAllStd[3, :], color = 'magenta')
	plt.plot(voltages, yAllStd[4, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(voltages, yAllStd[4, :], color = 'blue')
	plt.ylabel(r'$\sigma_y$ promedio(cm)')
	plt.xlabel(r'$V_{\mathrm{GEM}}$(V)')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesyTot-V-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'Energía promedio contra voltaje para $\%$Ar/CO2 fijos')
	plt.plot(voltages, eAllMean[0, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(voltages, eAllMean[0, :], color = 'purple')
	plt.plot(voltages, eAllMean[1, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(voltages, eAllMean[1, :], color = 'red')
	plt.plot(voltages, eAllMean[2, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(voltages, eAllMean[2, :], color = 'green')
	plt.plot(voltages, eAllMean[3, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(voltages, eAllMean[3, :], color = 'magenta')
	plt.plot(voltages, eAllMean[4, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(voltages, eAllMean[4, :], color = 'blue')
	plt.ylabel(r'$E_{e^{-}}$(eV)')
	plt.xlabel(r'$V_{\mathrm{GEM}}$(V)')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/Energia-V-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'Desviación energía promedio contra voltaje para $\%$Ar/CO2 fijos')
	plt.plot(voltages, eAllStd[0, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(voltages, eAllStd[0, :], color = 'purple')
	plt.plot(voltages, eAllStd[1, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(voltages, eAllStd[1, :], color = 'red')
	plt.plot(voltages, eAllStd[2, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(voltages, eAllStd[2, :], color = 'green')
	plt.plot(voltages, eAllStd[3, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(voltages, eAllStd[3, :], color = 'magenta')
	plt.plot(voltages, eAllStd[4, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(voltages, eAllStd[4, :], color = 'blue')
	plt.ylabel(r'$\sigma_E$ promedio(eV)')
	plt.xlabel(r'$V_{\mathrm{GEM}}$(V)')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesEnergia-V-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\langle x \rangle$ contra voltaje promediada por avalacha para $\%$Ar/CO2 fijos')
	plt.plot(voltages, xAvgMean[0, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(voltages, xAvgMean[0, :], color = 'purple')
	plt.plot(voltages, xAvgMean[1, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(voltages, xAvgMean[1, :], color = 'red')
	plt.plot(voltages, xAvgMean[2, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(voltages, xAvgMean[2, :], color = 'green')
	plt.plot(voltages, xAvgMean[3, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(voltages, xAvgMean[3, :], color = 'magenta')
	plt.plot(voltages, xAvgMean[4, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(voltages, xAvgMean[4, :], color = 'blue')
	plt.ylabel('Coordenada $x$ promedio(cm)')
	plt.xlabel(r'$V_{\mathrm{GEM}}$(V)')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/xProm-V-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle x \rangle}$ contra voltaje promediada por avalacha para $\%$Ar/CO2 fijos')
	plt.plot(voltages, xAllStd[0, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(voltages, xAllStd[0, :], color = 'purple')
	plt.plot(voltages, xAllStd[1, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(voltages, xAllStd[1, :], color = 'red')
	plt.plot(voltages, xAllStd[2, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(voltages, xAllStd[2, :], color = 'green')
	plt.plot(voltages, xAllStd[3, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(voltages, xAllStd[3, :], color = 'magenta')
	plt.plot(voltages, xAllStd[4, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(voltages, xAllStd[4, :], color = 'blue')
	plt.ylabel(r'$\sigma_x$ promedio(cm)')
	plt.xlabel(r'$V_{\mathrm{GEM}}$(V)')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesxProm-V-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\langle y \rangle$ contra voltaje promediada por avalacha para $\%$Ar/CO2 fijos')
	plt.plot(voltages, yAvgMean[0, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(voltages, yAvgMean[0, :], color = 'purple')
	plt.plot(voltages, yAvgMean[1, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(voltages, yAvgMean[1, :], color = 'red')
	plt.plot(voltages, yAvgMean[2, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(voltages, yAvgMean[2, :], color = 'green')
	plt.plot(voltages, yAvgMean[3, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(voltages, yAvgMean[3, :], color = 'magenta')
	plt.plot(voltages, yAvgMean[4, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(voltages, yAvgMean[4, :], color = 'blue')
	plt.ylabel('Coordenada $y$ promedio(cm)')
	plt.xlabel(r'$V_{\mathrm{GEM}}$(V)')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/yProm-V-Ar.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle y \rangle}$ contra voltaje promediada por avalacha para $\%$Ar/CO2 fijos')
	plt.plot(voltages, yAllStd[0, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.scatter(voltages, yAllStd[0, :], color = 'purple')
	plt.plot(voltages, yAllStd[1, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.scatter(voltages, yAllStd[1, :], color = 'red')
	plt.plot(voltages, yAllStd[2, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.scatter(voltages, yAllStd[2, :], color = 'green')
	plt.plot(voltages, yAllStd[3, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.scatter(voltages, yAllStd[3, :], color = 'magenta')
	plt.plot(voltages, yAllStd[4, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.scatter(voltages, yAllStd[4, :], color = 'blue')
	plt.ylabel(r'$\sigma_y$ promedio(cm)')
	plt.xlabel(r'$V_{\mathrm{GEM}}$(V)')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesyProm-V-Ar.eps', format = 'eps')
	plt.show()

	"""
	plt.title('Distribución electrones por evento para $\%$ Ar/CO2 fijos a ')
	plt.hist(yAllStd[0, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(60, 40), color = 'purple')
	plt.hist(yAllStd[1, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(65, 35), color = 'red')
	plt.hist(yAllStd[2, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(70, 30), color = 'green')
	plt.hist(yAllStd[3, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(75, 25), color = 'magenta')
	plt.hist(yAllStd[4, :], label = r'$\mathrm{Ar/CO_2} = $' + '{}/{}'.format(80, 20), color = 'blue')
	plt.ylabel('Desviación ganancia promedio')
	plt.xlabel('V')
	plt.legend()
	plt.tight_layout()
	plt.show()

	"""

	plt.title(r'$\langle x \rangle$ contra $\%$Ar con todos los eventos para voltajes fijos')
	plt.plot(argons, xAllMean[:, 0], label = 'V = 400V', color = 'purple')
	plt.scatter(argons, xAllMean[:, 0], color = 'purple')
	plt.plot(argons, xAllMean[:, 2], label = 'V = 420V', color = 'red')
	plt.scatter(argons, xAllMean[:, 2], color = 'red')
	plt.plot(argons, xAllMean[:, 4], label = 'V = 440V', color = 'green')
	plt.scatter(argons, xAllMean[:, 4], color = 'green')
	plt.plot(argons, xAllMean[:, 6], label = 'V = 460V', color = 'magenta')
	plt.scatter(argons, xAllMean[:, 6], color = 'magenta')
	plt.plot(argons, xAllMean[:, 8], label = 'V = 480V', color = 'blue')
	plt.scatter(argons, xAllMean[:, 8], color = 'blue')
	plt.ylabel('Coordenada $x$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/xTot-Ar-V.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle x \rangle}$ contra $\%$Ar con todos los eventos para voltajes fijos')
	plt.plot(argons, xAllStd[:, 0], label = 'V = 400V', color = 'purple')
	plt.scatter(argons, xAllStd[:, 0], color = 'purple')
	plt.plot(argons, xAllStd[:, 2], label = 'V = 420V', color = 'red')
	plt.scatter(argons, xAllStd[:, 2], color = 'red')
	plt.plot(argons, xAllStd[:, 4], label = 'V = 440V', color = 'green')
	plt.scatter(argons, xAllStd[:, 4], color = 'green')
	plt.plot(argons, xAllStd[:, 6], label = 'V = 460V', color = 'magenta')
	plt.scatter(argons, xAllStd[:, 6], color = 'magenta')
	plt.plot(argons, xAllStd[:, 8], label = 'V = 480V', color = 'blue')
	plt.scatter(argons, xAllStd[:, 8], color = 'blue')
	plt.ylabel(r'$\sigma_x$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesxTot-Ar-V.eps', format = 'eps')
	plt.show()

	plt.title(r'$\langle y \rangle$ contra $\%$Ar con todos los eventos para voltajes fijos')
	plt.plot(argons, yAllMean[:, 0], label = 'V = 400V', color = 'purple')
	plt.scatter(argons, yAllMean[:, 0], color = 'purple')
	plt.plot(argons, yAllMean[:, 2], label = 'V = 420V', color = 'red')
	plt.scatter(argons, yAllMean[:, 2], color = 'red')
	plt.plot(argons, yAllMean[:, 4], label = 'V = 440V', color = 'green')
	plt.scatter(argons, yAllMean[:, 4], color = 'green')
	plt.plot(argons, yAllMean[:, 6], label = 'V = 460V', color = 'magenta')
	plt.scatter(argons, yAllMean[:, 6], color = 'magenta')
	plt.plot(argons, yAllMean[:, 8], label = 'V = 480V', color = 'blue')
	plt.scatter(argons, yAllMean[:, 8], color = 'blue')
	plt.ylabel('Coordenada $y$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/yTot-Ar-V.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle y \rangle}$ contra $\%$Ar con todos los eventos para voltajes fijos')
	plt.plot(argons, yAllStd[:, 0], label = 'V = 400V', color = 'purple')
	plt.scatter(argons, yAllStd[:, 0], color = 'purple')
	plt.plot(argons, yAllStd[:, 2], label = 'V = 420V', color = 'red')
	plt.scatter(argons, yAllStd[:, 2], color = 'red')
	plt.plot(argons, yAllStd[:, 4], label = 'V = 440V', color = 'green')
	plt.scatter(argons, yAllStd[:, 4], color = 'green')
	plt.plot(argons, yAllStd[:, 6], label = 'V = 460V', color = 'magenta')
	plt.scatter(argons, yAllStd[:, 6], color = 'magenta')
	plt.plot(argons, yAllStd[:, 8], label = 'V = 480V', color = 'blue')
	plt.scatter(argons, yAllStd[:, 8], color = 'blue')
	plt.ylabel(r'$\sigma_y$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesyTot-Ar-V.eps', format = 'eps')
	plt.show()

	plt.title(r'Energía promedio contra $\%$Ar para voltajes fijos')
	plt.plot(argons, eAllMean[:, 0], label = 'V = 400V', color = 'purple')
	plt.scatter(argons, eAllMean[:, 0], color = 'purple')
	plt.plot(argons, eAllMean[:, 2], label = 'V = 420V', color = 'red')
	plt.scatter(argons, eAllMean[:, 2], color = 'red')
	plt.plot(argons, eAllMean[:, 4], label = 'V = 440V', color = 'green')
	plt.scatter(argons, eAllMean[:, 4], color = 'green')
	plt.plot(argons, eAllMean[:, 6], label = 'V = 460V', color = 'magenta')
	plt.scatter(argons, eAllMean[:, 6], color = 'magenta')
	plt.plot(argons, eAllMean[:, 8], label = 'V = 480V', color = 'blue')
	plt.scatter(argons, eAllMean[:, 8], color = 'blue')
	plt.ylabel(r'$E_{e^{-}}$(eV)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/Energia-Ar-V.eps', format = 'eps')
	plt.show()

	plt.title(r'Desviación energía promedio contra $\%$Ar para voltajes fijos')
	plt.plot(argons, eAllStd[:, 0], label = 'V = 400V', color = 'purple')
	plt.scatter(argons, eAllStd[:, 0], color = 'purple')
	plt.plot(argons, eAllStd[:, 2], label = 'V = 420V', color = 'red')
	plt.scatter(argons, eAllStd[:, 2], color = 'red')
	plt.plot(argons, eAllStd[:, 4], label = 'V = 440V', color = 'green')
	plt.scatter(argons, eAllStd[:, 4], color = 'green')
	plt.plot(argons, eAllStd[:, 6], label = 'V = 460V', color = 'magenta')
	plt.scatter(argons, eAllStd[:, 6], color = 'magenta')
	plt.plot(argons, eAllStd[:, 8], label = 'V = 480V', color = 'blue')
	plt.scatter(argons, eAllStd[:, 8], color = 'blue')
	plt.ylabel(r'$\sigma_E$ promedio(eV)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesEnergia-Ar-V.eps', format = 'eps')
	plt.show()

	plt.title(r'$\langle x \rangle$ contra $\%$Ar promediada por avalacha para voltajes fijos')
	plt.plot(argons, xAvgMean[:, 0], label = 'V = 400V', color = 'purple')
	plt.scatter(argons, xAvgMean[:, 0], color = 'purple')
	plt.plot(argons, xAvgMean[:, 2], label = 'V = 420V', color = 'red')
	plt.scatter(argons, xAvgMean[:, 2], color = 'red')
	plt.plot(argons, xAvgMean[:, 4], label = 'V = 440V', color = 'green')
	plt.scatter(argons, xAvgMean[:, 4], color = 'green')
	plt.plot(argons, xAvgMean[:, 6], label = 'V = 460V', color = 'magenta')
	plt.scatter(argons, xAvgMean[:, 6], color = 'magenta')
	plt.plot(argons, xAvgMean[:, 8], label = 'V = 480V', color = 'blue')
	plt.scatter(argons, xAvgMean[:, 8], color = 'blue')
	plt.ylabel('Coordenada $x$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/xProm-Ar-V.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle x \rangle}$ contra $\%$Ar promediada por avalacha para voltajes fijos')
	plt.plot(argons, xAllStd[:, 0], label = 'V = 400V', color = 'purple')
	plt.scatter(argons, xAllStd[:, 0], color = 'purple')
	plt.plot(argons, xAllStd[:, 2], label = 'V = 420V', color = 'red')
	plt.scatter(argons, xAllStd[:, 2], color = 'red')
	plt.plot(argons, xAllStd[:, 4], label = 'V = 440V', color = 'green')
	plt.scatter(argons, xAllStd[:, 2], color = 'green')
	plt.plot(argons, xAllStd[:, 6], label = 'V = 460V', color = 'magenta')
	plt.scatter(argons, xAllStd[:, 6], color = 'magenta')
	plt.plot(argons, xAllStd[:, 8], label = 'V = 480V', color = 'blue')
	plt.scatter(argons, xAllStd[:, 8], color = 'blue')
	plt.ylabel(r'$\sigma_x$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesxProm-Ar-V.eps', format = 'eps')
	plt.show()


	plt.title(r'$\langle y \rangle$ contra $\%$Ar promediada por avalacha para voltajes fijos')
	plt.plot(argons, yAvgMean[:, 0], label = 'V = 400V', color = 'purple')
	plt.scatter(argons, yAvgMean[:, 0], color = 'purple')
	plt.plot(argons, yAvgMean[:, 2], label = 'V = 420V', color = 'red')
	plt.scatter(argons, yAvgMean[:, 2], color = 'red')
	plt.plot(argons, yAvgMean[:, 4], label = 'V = 440V', color = 'green')
	plt.scatter(argons, yAvgMean[:, 4], color = 'green')
	plt.plot(argons, yAvgMean[:, 6], label = 'V = 460V', color = 'magenta')
	plt.scatter(argons, yAvgMean[:, 6], color = 'magenta')
	plt.plot(argons, yAvgMean[:, 8], label = 'V = 480V', color = 'blue')
	plt.scatter(argons, yAvgMean[:, 8], color = 'blue')
	plt.ylabel('Coordenada $y$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/yProm-Ar-V.eps', format = 'eps')
	plt.show()

	plt.title(r'$\sigma_{\langle y \rangle}$ contra $\%$Ar promediada por avalacha para voltajes fijos')
	plt.plot(argons, yAllStd[:, 0], label = 'V = 400V', color = 'purple')
	plt.scatter(argons, yAllStd[:, 0], color = 'purple')
	plt.plot(argons, yAllStd[:, 2], label = 'V = 420V', color = 'red')
	plt.scatter(argons, yAllStd[:, 2], color = 'red')
	plt.plot(argons, yAllStd[:, 4], label = 'V = 440V', color = 'green')
	plt.scatter(argons, yAllStd[:, 2], color = 'green')
	plt.plot(argons, yAllStd[:, 6], label = 'V = 460V', color = 'magenta')
	plt.scatter(argons, yAllStd[:, 6], color = 'magenta')
	plt.plot(argons, yAllStd[:, 8], label = 'V = 480V', color = 'blue')
	plt.scatter(argons, yAllStd[:, 8], color = 'blue')
	plt.ylabel(r'$\sigma_y$ promedio(cm)')
	plt.xlabel('$\%$ Ar')
	plt.legend()
	plt.tight_layout()
	plt.savefig('electronGraphs/DesyProm-Ar-V.eps', format = 'eps')
	plt.show()


fixedE()